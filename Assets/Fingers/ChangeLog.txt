Changelog
--------------------
1.7.3	(2017-08-26)
		- Added 3D example with zooming camera and orbit a 3D object.

1.7.2	(2017-08-14)
		- Added camera zoom and pan demo for orthographic and perspective, see DemoSceneZoomPanCamera.

1.7.1	(2017-08-05)
		- Fix null reference exception.

1.7.0	(2017-08-04)
		- Added DPad prefab. See DemoSceneDPad.
		- Created joystick prefab from the joystick demo scene.

1.6.1	(2017-07-19)
		- Set screen x and y of gesture touch to the Unity touch raw x and raw y values.

1.6.0	(2017-06-15)
		- Added joystick script. See DemoSceneJoystick.
		- Fixed a bug where platform specific view didn't work if the gesture didn't start over a game object.

1.5.2	(2017-05-10)
		- Unity 5.6 bug fixes and bug fixes for pass through logic.
		- Better handling of 3D scenes.

1.5.1	(2017-04-21)
		- Fix for buttons, toggle, dropdown, etc. passing through touches by default. They now do NOT pass through touches by default.

1.5.0	- Added FingersPanRotateScaleScript.cs and FingersDragDropScript.cs, with example scenes.
		- Swipe gesture sets executing and failed states.

1.4.0	- Added FingersImageAutomationScene. When generating large amounts of image gestures, this will copy the code automatically into a text box. When you are done drawing all the variants you can copy and paste the code out of the text box. Tap the X in the bottom right in the scene to remove the last line if you made a mistake.
		- Added Score property to ImageGestureImage. Value is 0-1.

1.3.2	- Change ImageGestureRecognizer again. It sends begin, executing and end states. It got a new ThresholdUnits property, which is the distance in units the touch must move before this gesture begins.
        - Critical bug fixes for all the gestures. I've tested a lot on iPad and Android devices to try and fix little glitches and problems with the asset.
        - Refactor TouchesBegan. It receives an enumerable collection of all beginning touches. CurrentTouches property is removed, use CurrentTrackedTouches instead inside TouchesMoved and TouchesEnded.

1.3.1	- ImageGestureRecognizer no longer sends began and executing states. Only Ended state is sent. You can tell if the state began if the gesture calls back and TouchesAreMoving is false, then the touches have just begun. If it is true, then the touches are moving.

1.3.0	- Added a demo showing a zoomable scroll view
		- Added a FingersScriptPrefab so the script can live for the lifetime of your game. See DemoScript.cs Start method.

1.2.5	- Added a way to override the anchor of the one touch rotate gesture.

1.2.4	- Pass through handler tweak: renamed to CaptureGestureHandler. A null handler or null return value uses default capture behavior, otherwise return true to capture the gesture, false to pass it through.

1.2.3	- Improvements to pass through gestures - now a parent UI element will pass through gestures to all child elements.
		- Also added a custom pass through handler function for complex cases.

1.2.2	- One finger gestures will not begin if more than one finger is down.

1.2.1	- Critical bug fixes for image gesture recognizer and image demo scene.

1.2.0	- Big refactor of code. Gestures now track touches, which means simultaneous gestures can execute on separate touches now.
		- Some properties have been removed or renamed. In GestureRecognizer.cs, the public properties (at the bottom of the file) are where most things can be found now.
		- Added custom image recognition gestures.

1.1.1	- Code refactoring, clear gestures when scenes change and added tutorial video link.

1.1		- Fingers can use all mouse buttons and the mouse wheel.
		- Use ctrl + wheel to pinch and shift + wheel to rotate.
		- FingersScript has Touches property and the demo adds circles for touch points.

1.0.2	- Bug fixes. conv
		- Breaking change: OnUpdated is now just Updated.

1.0.0	- Initial release.
